package server;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import server.hotel.HotelEntity;
import server.hotel.HotelRepository;
import server.user.UserEntity;
import server.user.UserRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/database") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
		// Which is auto-generated by Spring, we will use it to handle the data
		private UserRepository userRepository;

	@GetMapping(path="/addUser") // Map ONLY GET Requests
		public @ResponseBody String addNewUser (@RequestParam String name
				, @RequestParam String email) {
			// @ResponseBody means the returned String is the response, not a view name
			// @RequestParam means it is a parameter from the GET or POST request

			UserEntity n = new UserEntity(name, email);
			userRepository.save(n);
			return "Saved";
		}

	@Autowired
		private HotelRepository hotelRepository;

	@GetMapping(path="/addHotel")
		public @ResponseBody String addNewHotel (
				@RequestParam String name,
				@RequestParam String email,
				@RequestParam double latitude,
				@RequestParam Double longtitude,
				@RequestParam ArrayList<String> amenities,
				@RequestParam Integer numRooms
				) {
			Map<Integer, String> amenityMap = new HashMap<>();
			for(int i = 0; i < amenities.size(); i++)
				amenityMap.put(i, amenities.get(i));
			HotelEntity h = new HotelEntity(numRooms, name, email, longtitude, latitude, amenityMap);
			String s = "something" + h.getLatitude() + " is maybe the same as "  + latitude;
			hotelRepository.save(h);
			return s; 
				}

	@GetMapping(path="/allHotels")
	public @ResponseBody Iterable<HotelEntity> getAllHotels() {
		// This returns a JSON or XML with the users
		return hotelRepository.findAll();
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<UserEntity> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
